.charts-css {

  &.bar {
    // Shape
    display: block;
    width: 100%;

    --labels-size: 80px;

    caption,
    colgroup,
    thead,
    tfoot {
      display: none;
    }

    // Layout
    tbody {
      display: flex;
      justify-content: space-between;
      align-items: stretch;

      width: 100%;
      height: 100%;

      tr {
        position: relative;

        // Even column size
        flex-grow: 1;
        flex-shrink: 1;
        flex-basis: 0;
        overflow-wrap: anywhere;

        // Display cells in a column
        display: flex;
        justify-content: space-around;

        padding: 0;
        margin: 0;

        th {
          display: flex;
          align-items: center;

          padding: 0;
          margin: 0;

          position: absolute;
          top: 0;
          bottom: 0;
        }

        td {
          display: flex;
          align-items: center;

          width: calc( 100% * var( --size, 1 ) );
          height: 100%;

          padding: 0;
          margin: 0;

          position: relative; // For tooltips
        }

      }
    }

    // Labels Position
    &:not(.labels-after) {
      tbody {
        tr {
          align-items: flex-start;
          margin-inline-start: var( --labels-size );

          th {
            left: calc( -1 * var( --labels-size ) - var( --primary-axis-width ) );
            width: var( --labels-size );
            justify-content: flex-start;
          }

          td {
            justify-content: flex-end;
          }
        }
      }
    }
    &.labels-after {
      tbody {
        tr {
          align-items: flex-end;
          margin-inline-end: var( --labels-size );

          th {
            right: calc( -1 * var( --labels-size ) - var( --primary-axis-width ) );
            width: var( --labels-size );
            justify-content: flex-end;
          }

          td {
            justify-content: flex-start;
          }
        }
      }
    }

    // Stacked
    &:not(.stacked) {
      tbody tr {

        td {
          // Even cell size
          flex-grow: 1;
          flex-shrink: 1;
          flex-basis: 0;
        }
      }
    }
    &.multiple.stacked {
      tbody tr {
        flex-direction: row;
        justify-content: start;
        align-items: flex-start;

        td {
          flex-grow: unset;
          flex-shrink: unset;
          flex-basis: unset;
        }
      }
    }

    // Reverse Order
    &:not(.reverse-data) {
      tbody {
        flex-direction: column;
      }
    }
    &.reverse-data {
      tbody {
        flex-direction: column-reverse;
      }
    }
    &:not(.reverse-datasets) {
      tbody tr {
        flex-direction: column;
      }
    }
    &.reverse-datasets {
      tbody tr {
        flex-direction: column-reverse;
      }
    }

    // Spacing
    @for $i from 1 through 20 {
      &.data-spacing-#{$i} {
        tbody tr {
          padding-block-start: #{$i}px;
          padding-block-end: #{$i}px;
        }
      }
    }
    @for $i from 1 through 20 {
      &.datasets-spacing-#{$i} {
        tbody tr td {
          margin-block-start: #{$i}px;
          margin-block-end: #{$i}px;
        }
      }
    }

    // Axes
    &.show-primary-axis {
      &:not(.labels-after) {
        tbody tr {
          border-inline-start: var( --primary-axis-width ) var( --primary-axis-style ) var( --primary-axis-color );
        }
      }
      &.labels-after {
        tbody tr {
          border-inline-end: var( --primary-axis-width ) var( --primary-axis-style ) var( --primary-axis-color );
        }
      }
    }
    @for $i from 1 through $max-items {
      &.show-#{$i}-secondary-axes {
        &:not(.labels-after) {
          tbody tr {
            background-size: ( 100% / $i ) 100%;
            background-image: linear-gradient( -90deg, var( --secondary-axes-color ) var( --secondary-axes-width ), transparent var( --secondary-axes-width ) );
          }
        }
        &.labels-after {
          tbody tr {
            background-size: ( 100% / $i ) 100%;
            background-image: linear-gradient( 90deg, var( --secondary-axes-color ) var( --secondary-axes-width ), transparent var( --secondary-axes-width ) );
          }
        }
      }
    }
    &.show-data-axes {
      tbody tr {
        border-block-end: var( --data-axes-width ) var( --data-axes-style ) var( --data-axes-color );
      }
      &:not(.reverse-data) {
        tbody tr:first-of-type {
          border-block-start: var( --data-axes-width ) var( --data-axes-style ) var( --data-axes-color );
        }
      }
      &.reverse-data {
        tbody tr:last-of-type {
          border-block-start: var( --data-axes-width ) var( --data-axes-style ) var( --data-axes-color );
        }
      }
    }
    &.show-dataset-axes { // TODO: fix this
      tbody tr td {
        border-block-end: var( --data-axes-width ) var( --data-axes-style ) var( --data-axes-color );
      }
      &:not(.reverse-data) {
        tbody tr:first-of-type td {
          border-block-start: var( --data-axes-width ) var( --data-axes-style ) var( --data-axes-color );
        }
      }
      &.reverse-data {
        tbody tr:last-of-type td {
          border-block-start: var( --data-axes-width ) var( --data-axes-style ) var( --data-axes-color );
        }
      }
    }

    // Hover
    &.hover {
      tr:hover {
        background-color: var( --tr-hover-color, rgba(0, 0, 0, 0.05) );
      }
      td:hover {
        opacity: .75;
      }
    }

  }

}
